from bot_settings import *

def main_found():
    @bot.callback_query_handler(func=lambda call: True)
    def handle_callback(call):
        chat_id = call.message.chat.id
        data = load_data()
        if call.from_user.username in data["founders"]:
            if call.data == 'f_btn1':
                user_states[chat_id] = 'awaiting_input'
                bot.send_message(
                    chat_id,
                    (
                        "üì© *–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –æ –Ω–æ–≤–æ–π –ø–æ—Å—ã–ª–∫–µ:*\n\n"
                        "–§–æ—Ä–º–∞—Ç:\n`Track-code` `–°—Ç–∞—Ç—É—Å —Ç–æ–≤–∞—Ä–∞`\n\n"
                        "üìç *–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã:*\n"
                        "1Ô∏è‚É£ –í –æ–±—Ä–∞–±–æ—Ç–∫–µ...\n"
                        "2Ô∏è‚É£ –ü–æ—Å—Ç—É–ø–∏–ª –Ω–∞ —Å–∫–ª–∞–¥ –≤ –ö–∏—Ç–∞–µ üè™\n"
                        "3Ô∏è‚É£ –í –ø—É—Ç–∏ üöõ\n"
                        "4Ô∏è‚É£ –ì–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ üì¶\n\n"
                        "‚úèÔ∏è *–ü—Ä–∏–º–µ—Ä:* `3423 2`"
                    ),
                    parse_mode='Markdown'
                )


            elif call.data == 'f_btn2':
                # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
                data = load_data()
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ
                if not data:
                    bot.send_message(chat_id, "‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.")
                    return

                # –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏
                filename = "List_cargo.txt"

                try:
                    with open(filename, "w", encoding="utf-8") as file:
                        for item in data["packages"]:
                            track_code = item
                            status = data["packages"][item]
                            file.write(f"{track_code}, {map_status_to_text(status)}\n")

                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

                    with open(filename, "rb") as file:
                        bot.send_document(chat_id, file)
                    bot.send_message(chat_id, "üìÑ –§–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")

                except Exception as e:
                    bot.send_message(chat_id, f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {e}")

    @bot.message_handler(func=lambda message: True)
    def handle_message(message):
        chat_id = message.chat.id
        if message.from_user.username in data["founders"]:
            if user_states.get(chat_id) == 'awaiting_input':
                try:
                    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞
                    user_input = message.text.split(' ')
                    track_code = user_input[0]
                    delivery_status = user_input[1]

                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Å—Ç–∞—Ç—É—Å–∞
                    if delivery_status not in ["1", "2", "3", "4"]:
                        bot.send_message(
                            chat_id,
                            "‚ùå *–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Å—Ç–∞—Ç—É—Å.*\n"
                            "üìç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç–∞—Ç—É—Å—ã –æ—Ç 1 –¥–æ 4.",
                            parse_mode="Markdown"
                        )
                        return

                    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
                    add_package_info(track_code, delivery_status)

                    bot.send_message(
                        chat_id,
                        (
                            f"‚úÖ *–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã:*\n\n"
                            f"üîπ *–¢—Ä–µ–∫-–∫–æ–¥:* `{track_code}`\n"
                            f"üìç *–°—Ç–∞—Ç—É—Å:* {map_status_to_text(delivery_status)}"
                        ),
                        parse_mode='Markdown'
                    )




                except Exception:

                    if user_input == ['0']:

                        bot.send_message(

                            chat_id,

                            (

                                f"‚úÖ *–í—Å–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–ø–∏—Å–æ–∫*"

                            ),

                            parse_mode='Markdown'

                        )

                        user_states[chat_id] = None

                    else:

                        bot.send_message(

                            chat_id,

                            "‚ùå *–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞.*\n"
    
                            "üìç –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: `Track-code –°—Ç–∞—Ç—É—Å`.",

                            parse_mode="Markdown"

                        )

            elif message.text == '–¢–∞–±–ª–∏—Ü–∞ —Å –¥–∞–Ω–Ω—ã–º–∏':
                bot.send_message(chat_id, "üìä *–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ —Ç–∞–±–ª–∏—Ü—É —Å –¥–∞–Ω–Ω—ã–º–∏.*", parse_mode="Markdown")
            else:
                bot.send_message(chat_id, "üëã *–í–≤–µ–¥–∏—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º.*", parse_mode="Markdown")


# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
